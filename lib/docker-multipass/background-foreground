#!/bin/bash -e

script_dir="$(dirname $0)"

program_name=$(basename $0)
vm_name=docker-multipass

print_help() {
  local prog_name=$1
  local exit_code=$2
  local err_msg=$3

  if [ -n "$err_msg" ]; then
    echo >&2 "$err_msg"
    echo >&2 ""
  fi

  echo "docker-multipass $prog_name, make multipass VM run with/without background permissions."
  echo ""
  echo "Usage: "
  echo "    docker-multipass $prog_name [-n|--name NAME]"
  echo ""
  echo "  -c,--cpus        Integer. Number of cpus provided to the docker VM. [$cpus]"
  echo "  -d,--disk        Amount of disk provided to the docker VM. [$disk]"
  echo "  -h,--help        Print this help text."
  echo "  -m,--mem         Amount of memory provided to the docker VM. [$memory]"
  echo "  -n,--name        Name of the docker VM. [$vm_name]"
  echo ""
  exit $exit_code
}

# Read config
config_file="$HOME/.docker-multipass-config"
if [ -f "$config_file" ]; then
  set -o allexport; source "$config_file"; set +o allexport
fi

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -n|--name)
      vm_name=$2
      shift
      shift
      ;;
    -h|--help)
      print_help "$program_name" 0
      ;;
    *)
      print_help "$program_name" $INVALID_ARGUMENT "Invalid argument $key"
      ;;
  esac
done
set -- "${POSITIONAL[@]}"

if [ "$program_name" = "background" ]; then
  readonly priority_cmd_flag="-b"
  readonly operation_string="Backgrounding"
elif [ "$program_name" = "foreground" ]; then
  readonly priority_cmd_flag="-B"
  readonly operation_string="Foregrounding"
fi

echo "$operation_string a process using taskpolicy requires root permisisons \
through sudo, please provide password if prompted."
sudo taskpolicy $priority_cmd_flag -p \
  $(ps aux |\
  grep "Support/multipassd/qemu/vault/instances/$vm_name/cloud-init-config.iso" |\
  grep -v grep |\
  awk '{print $2}')
